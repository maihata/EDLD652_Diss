---
title: "3_chi_sq"
author: "Maiko Hata"
format: pdf
execute: 
  eval: true 
  echo: false
  message: false 
  warning: false
editor: visual
engine: knitr
---

```{r}
library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
library(distill)
library(tibble)
library(rcartocolor)
library(ggplot2)
library(quarto)
library(descr)
```

## chi 1: race_us

--- to make the plot using corrplot of national race/exit patterns —

```{r}
race_us <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/race_us.csv")

race_oregon <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/race_oregon.csv")

```

```{r}
print(race_us)
```

```{r}
chi_omni <-chisq.test(race_us[, 3:8])
```

```{r}
print(chi_omni)
```

```{r}
omni_p_value <- chi_omni$p.value
omni_statistic <- chi_omni$statistic 
```

```{r}
chisq.test(race_oregon[, 3:8])
```

### step 2: byrace

--- US and Oregon entire table. Probably no need as I'll be running the chi-square with stdres anyway. —

```{r}
byrace <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/byrace.csv")

data_oregon <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/data_oregon.csv")
```

```{r}
chisq.test(data_oregon[, 2])
```

### chi 3: agg_by_area

--- withdrawn category —

```{r}
agg_by_area <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/agg_by_area.csv")
```

```{r}
chisq.test(agg_by_area[, 2:3])
```

### chi 4: us_data_attempts_BLWH

--- DQ for BLACK and WHITE for chi-square and odds ratio

```{r}
us_data_attempts <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/us_data_attempts_BLWH.csv")
```

```{r}
us_data_attempts_BLWH <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/us_data_attempts_BLWH.csv")

```

```{r}
chi_dq_BLWH_result <- chisq.test(us_data_attempts_BLWH[, 2:3])
chi_dq_BLWH_result
```

# All above runs.

### chi 5: race_matrix

--- I shouldn't need to "call" race_matrix.csv because it's a df but that means I have to recreate it --- I HAVE TO READ IT

```{r}
race_us <- read_csv("/Users/hata/Desktop/EDLD652_Diss/Data/race_us.csv")
```

```{r}
# DROPPED AREA but kept the RACE 
race_matrix <- as.matrix(race_us[, 4:9])
race_matrix
```

```{r}
# Check for NAs
anyNA(race_matrix)  

# Check for negative values
any(race_matrix < 0)  

# Check for infinite values
any(!is.finite(race_matrix))  
```

```{r}
chi_results <- chisq.test(race_matrix)
chi_results
```

# LINA: Does this number from the next chunk look right? LINA: "It's not adjusted"

```{r}
#LINA: DOESN'T RUN CORRECTLY --- SO I NEED THE ADJUSTED STANDARDIZED stdres 
chisq.test(race_matrix, correct = FALSE)$stdres
```

```{r}
# chisq.test(race_matrix)$expected
```

Open res_race_matrix as a df so I can show Lina the numbers.

```{r}
stdres_df <- chisq.test(race_matrix, correct = FALSE)$stdres
```

## Trying to get ADJUSTED standardized stdres

```{r}
#https://www.google.com/search?q=R+package+and+function+for+chi+square+standardized+adjusted+residual&rlz=1C5GCCM_en&oq=R+package+and+function+for+chi+square+standardized+adjusted+residual&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIGCAEQRRhA0gEJMTYwNzVqMGo3qAIAsAIA&sourceid=chrome&ie=UTF-8
adj_std_res <- chisq.test(race_matrix)
```

```{r}
print(adj_std_res)
```

```{r}
plot.new()
dev.off()
```

### corrplot race/exit categories for race: renaming columns/rows for chi_results

## Cameron: This is \$stdres = runs the standardized stdres and it takes degree of freedom into consideration

```{r}

corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.7)

# corrplot(chi_results$stdres, is.cor = FALSE) 
```

```{r}
# i wanted to rename categories but the number of columns didn't match because I still have exit total. checking the colnames 
colnames(chi_results$stdres)
```

```{r}
colnames(chi_results$stdres) <- c(
  "Withdrawal", 
  "Disqualification", 
  "Moved Out", 
  "Part B Eligible", 
  "Not Eligible", 
  "Not Determined")
```

```{r}
rownames(chi_results$stdres) <- c(
  "Alaska Native/American Indian", 
  "Asian", 
  "Black/African American", 
  "Hispanic/Latino", 
  "Two or More Races", 
  "Pacific Islander", 
  "White"
)
```

```{r}
#| fig-align: center
chi_results$stdres <- chi_results$stdres[, order(colnames(chi_results$stdres))]
```

```{r}
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.7) 
```

```{r}
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.3)
```

```{r}
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.6)
```

```{r}
corrplot(chi_results$stdres, 
         method = 'number', 
         is.cor = FALSE, 
         tl.cex = 0.6)
```

```{r}
corrplot(chi_results$stdres, 
         method = 'square', 
         is.cor = FALSE, 
         tl.cex = 0.6)
```

```{r}
corrplot(chi_results$stdres, 
         method = 'ellipse', 
         is.cor = FALSE, 
         tl.cex = 0.6)
```

## CAMERON: I still would like to get the letters off of the color code bar on the right (what are they?)

```{r}
#FINAL PLOT? 
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.8, 
         cl.cex = 0.7, 
         cl.offset = 0.5) 
```

```{r}
# Maybe this one is the FINAL PLOT? Saved 
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.8, # Size of text labels in the plot
         # tl.pos = 0.5, 
         cl.cex = 0.7,      # Size of color legend text
         cl.offset = 1,     # Increase offset to move labels away from the bar
         cl.ratio = 0.2)    
```

```{r}
# this is UNADJUSTED 
```

```{r}
# Next steps - but have to change the df names 
# stdres_df <- as.matrix(chi_results$stdres)#
# col_order <- order(colnames(stdres_df))
# row_order <- order(rownames(stdres_df))
# residual_df <- residual_df[row_order, col_order]
```

```{r}
print(chi_results)
```

```{r}
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.7)
```

trying to make it in times new roman

```{r}
par(family = "Times")
corrplot(chi_results$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.7)
```

### IGNORE THESE CHUNKS — I DON'T THINK I NEED THIS There used to be a Var1 and Var2 now there's only Var1. WHERE DID I MAKE stdres_matrix

```{r}
# colnames(residual_matrix)
# rownames(residual_matrix)
```

```{r}
# colnames(stdres_df)
# rownames(stdres_df) 
```

it's NULL so I need to assign names first it says

```{r}
# residual_matrix <- as.matrix(chi_results$stdres)
```

```{r}
# col_order <- order(colnames(residual_matrix))
```

```{r}
# row_order <- order(rownames(residual_matrix))
```

```{r}
# residual_matrix <- residual_matrix[row_order, col_order]
```

```{r}
# stdres <- chi_result$stdres
```

```{r}
# print(stdres)
```

```{r}
# corrplot(stdres,
#         is.corr = FALSE)
```

### IGNORE: chi 5: stdres_df

```{r}
# I'm trying out to see if I can do the chi-square with stdres (per https://chatgpt.com/share/67a1833d-9fc4-8012-8193-b6fc358a9687)
```

```{r}
# stdres_df <- as.data.frame(as.table(chi_result$stdres))
```

```{r}
# write.csv(stdres_df,         file = "/Users/hata/Desktop/EDLD652_Diss/Data/stdres_df.csv",   row.names = FALSE)
```

```{r}
# Maybe I shouldn't rename them here? 
# rownames(race_matrix) <- c(
#  "Alaska Native/American Indian", 
#  "Asian", 
#  "Black/African American", 
#  "Hispanic/Latino", 
#  "More than Two Races", 
#  "Pacific Islander", 
#  "White" ) 
```

## Idoesn't render but it almost does - it's rendering pdf and stops. What's wrong with the following chunk?
