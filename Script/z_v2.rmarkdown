---
title: "v2"
author: "Maiko Hata"
format: 
  pdf:
    mainfont: "Times New Roman"
    sansfont: "Times New Roman"
fig-width: 7
fig-height: 4
csl: apa.csl
execute: 
  eval: true 
  echo: false
  message: false 
  warning: false
editor: visual
engine: knitr
---

```{r}
library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
```



### National and Oregon CHILD COUNTS

NOTE TO SELF: ADD THE CENSUS NUMBER FOR FINAL PROJECT! BIND_ROWS!! WEEK 2? 3? Labs.

B-1. Load data



```{r}
# Imported excel file with multiple pages but specified only the second sheet. Yay 

childcount1920 <- read_excel("/Users/hata/Desktop/EDLD652_Diss/Data/1920-cchildcountandsettings-11.xlsx", sheet = 2)
```

```{r}
childcount1920 <- clean_names(childcount1920)
```

```{r}
unique(childcount1920$state)
```

```{r}
childcount1920USOR <- childcount1920 %>% 
  filter(state %in% c("US and Outlying Areas", "Oregon"))
```

```{r}
#deleting the "total 100%" column because it messes up with the visualization 

# childcount1920USOR <- childcount1920 %>%
#  filter(state == "US and Outlying Areas" | state == "Oregon") %>%
#  select(-"race_ethnicity_total_3percent")

```



B-2: chart 1



```{r}
# Gabrielle: "something about the syntax is not right" 
#childcount1920USOR <- childcount1920USOR %>%   mutate_if(is.numeric, ~ round(.x, 2)) 

# childcount1920USOR <- childcount1920USOR %>% mutate(percent = round(percent, 2))
```

```{r}
# YAY I converted the character columns to NUMERIC and then reduced it to dicimals
childcount1920USOR <- childcount1920USOR %>%
  mutate(across(where(is.character), as.numeric)) %>%  
  mutate(across(where(is.numeric), ~ round(.x, 2)))   
```

```{r}
kable(childcount1920USOR, 
      caption = "Child Count (US \\& Oregon)") %>% 
  kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
```



B-2: visualization 1



```{r}
# making it longer yeah
childcount1920USOR_long <- childcount1920USOR %>%
 gather(key = "race", value = "percent", -state)
```

```{r}
# Had to check to see why it wouldn't round up. Changed charactor to numeric 
str(childcount1920USOR_long$percent)
childcount1920USOR_long$percent <- as.numeric(childcount1920USOR_long$percent)
```

```{r}
# rounding up to 2 digits below the dicimal points 
childcount1920USOR_long <- childcount1920USOR_long %>%
  mutate(percent = round(percent, 2))
```

```{r}
# Chart 1 without viridis_d 
ggplot(childcount1920USOR_long, aes(x = state, y = percent, fill = race)) +
  geom_bar(stat = "identity") + 
  scale_y_continuous(labels = scales::percent_format(scale = 1)) +
  labs(title = "Percentage of Child Count by Race in US & Oregon",
       x = "State",
       y = "Percentage",
       fill = "Race") +
  theme_minimal() 
```

```{r}
# v.1 with viridis_d 
ggplot(childcount1920USOR_long, aes(x = state, y = percent, fill = race)) +
  geom_bar(stat = "identity") + 
  scale_fill_viridis_d() +  
  scale_y_continuous(labels = percent_format(scale = 1)) +
  labs(title = "Percentage of Child Count by Race in US & Oregon",
       x = "State",
       y = "Percentage",
       fill = "Race") +
  theme_minimal()
```

```{r}
# Change it to the bar chart 
ggplot(childcount1920USOR_long, aes(x = state, y = percent, fill = race)) +
  geom_bar(stat = "identity", position = "dodge") +  # "dodge" makes it a grouped bar chart
  scale_fill_viridis_d() +  # Apply Viridis discrete color palette
  scale_y_continuous(labels = percent_format(scale = 1)) +  # Format y-axis as percentages
  labs(title = "Percentage of Child Count by Race in US & Oregon",
       x = "State",
       y = "Percentage",
       fill = "Race") +
  theme_minimal() 
```



C. National and Oregon EXIT data by RACE



```{r}
#|label: load-OSEP-EXIT-data
# importing the data and cleaning it up: 
# This is the year 2013-2022. 
# 1. REMOVED DECEASED and NOT IN USE IN OREGON CATEGORY
# 2. CREATED THE complete_or_not_eligible combining three categories 

byrace <- import(here("Data", "race v.2.xlsx")) %>% 
  clean_names() %>% 
  select(-7, -12) %>% 
  mutate(complete_or_not_eligible = complete_prior_to_reaching_max_age_for_part_c + not_eligible_for_part_b_exit_with_no_referrals + not_eligible_for_part_b_exit_with_referrals_to_other_programs)
```



I FIXED THE MISSING COLUMN by adding back part_b_eligibility_not_determined. I think this is what I can use for CHI-SQUARE WITH RESIDUALS?



```{r}
#| label: aggregated-by-race

agg_by_race_and_state <- byrace %>% 
  group_by(race, area) %>% 
  summarize(exit_total = sum(exiting_total2), 
            withdrawal_by_parent = sum(withdrawal_by_parent),
            attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful),
            moved_out_of_state = sum(moved_out_of_state),
            part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c),
            complete_or_not_eligible = sum(complete_or_not_eligible), 
            part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined))
```

```{r}
# chatgpt says it's pretty easy to reorder the categories 
```



I should be able to export df to excel this way but haven't tried it yet.



```{r}
# library(writexl)
# df <- tibble::tibble(A = 1:5, B = 6:10, C = 11:15)  # Example tibble
# write_xlsx(df, "my_data.xlsx")  # Saves to an Excel file 
```



agg_by_race_and_state



```{r}
# aggregated by race for OR
race_oregon <- agg_by_race_and_state %>%
  filter(area == "Oregon")
```

```{r}
# aggregated by race for US
race_us <- agg_by_race_and_state %>% 
  filter(area == "US and Outlying Areas") 
```

```{r}
race_us <- race_us %>% 
  select(-area)
```

```{r}
# renaming category names to full names for race_us 
race_us <- race_us %>%
  mutate(race = recode(race,
    "AM" = "Alaska Native or American Indian",
    "AS" = "Asian",
    "BL" = "Black or African American",
    "HI" = "Hispanic/Latino",
    "WH" = "White",
    "MU" = "Two or More Races",
    "PI" = "Pacific Islander"
  ))

```

```{r}
# Made it LONGER for real! 
us_data_long <- race_us %>% 
  pivot_longer(
    cols = 3:7, 
    values_to = "values",
    names_to = "names"
  ) %>% 
  group_by(race) %>% 
  mutate(percentage = round(values/exit_total, digits = 4))
```

```{r}
# this is race on X (columns )
ggplot(residuals_df, aes(Var1, Var2, fill = Freq)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red") +
  labs(title = "Chi-Square Standardized Residuals",
       x = "Exit Reason", y = "Race") +
  theme_minimal() 
```

```{r}
# corrplot(chisq$residuals, 
# is.cor = FALSE)
```



C. Oregon data by LANGUAGES



```{r}
# importing the data and clinining up: 
# 1. REMOVED DECEASED 
# 2. CREATED THE complete_or_not_eligible combining three categories 

bylang <- import(here("Data", "ODE data v2.xlsx")) %>% 
  clean_names() %>% 
  select(-6) %>%
  mutate(complete_or_not_eligible = no_longer_eligible_for_part_c_prior_to_reaching_age_three + not_eligible_for_part_b_exit_with_no_referrals +
not_eligible_for_part_b_exit_with_referrals_to_other_programs)

view(bylang)
```

```{r}
agg_by_lang <- bylang %>% 
  group_by(primary_language) %>% 
  summarize(exit_total = sum(total), 
            withdrawal_by_parent = sum(withdrawal_by_parent), 
            attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful),
            moved_out_of_state = sum(moved_out_of_state),
            part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c),
            complete_or_not_eligible = sum(complete_or_not_eligible))

# FROM v1: 
# aggregated by race for OR
#race_oregon <- agg_by_race_and_state %>%
 # filter(area == "Oregon")

# aggregated by race for US
#race_us <- agg_by_race_and_state %>% 
 # filter(area == "US and Outlying Areas")
```

```{r agg_by_lang_no_SL  take out Sign Language and NA rows}

agg_by_lang_no_SL <- agg_by_lang %>% 
  filter(primary_language != "Sign languages")
```



Oregon data by language KABLE table

-   Renaming the columns



```{r}
agg_by_lang <- agg_by_lang %>% 
  rename( 
    `Primary Language` = primary_language, 
    `Total Exit` = exit_total, 
    `Withdrawn` = withdrawal_by_parent, 
    `Disqualified` = attempts_to_contact_unsuccessful, 
    `Moved Out` = moved_out_of_state, 
    `Part B Eligible` = part_b_eligible_exiting_part_c, 
    `Not Eligible` = complete_or_not_eligible)
```



-   Reorder the Categories alphabetically :)



```{r}
agg_by_lang <- agg_by_lang %>%
  select(
    "Primary Language", 
    sort(names(.)[names(.) 
                  != "Primary Language"]))
```



-   Ran KABLE for a table



```{r}
kable(agg_by_lang, 
      caption = "Initial Oregon Data by Home Languages") %>%
  kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
```

