---
title: "v2"
author: "Maiko Hata"
format: 
  pdf:
    mainfont: "Times New Roman"
    sansfont: "Times New Roman"
fig-width: 6
fig-height: 4
csl: apa.csl
execute: 
  eval: true 
  echo: false
  message: false 
  warning: false
editor: visual
engine: knitr
---

```{r}
library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
library(distill)
library(tibble)
library(rcartocolor)
library(ggplot2)
library(quarto)
```

## National and Oregon CHILD COUNTS

```{r}
# NOTE TO SELF: ADD THE CENSUS NUMBER FOR FINAL PROJECT! BIND_ROWS!! WEEK 2? 3? Labs.
```

### cc csv 1: 

-   childcount1920 (all states)

-   childcount1920USOR (National and Oregon)

-   cc_transposed (childcount1920USOR but X and Y flipped)

```{r}
childcount1920 <- read_excel("/Users/hata/Desktop/EDLD652_Diss/Data/1920-cchildcountandsettings-11.xlsx", sheet = 2)
```

```{r}
childcount1920 <- clean_names(childcount1920)
```

```{r}
childcount1920USOR <- childcount1920 %>% 
  filter(state %in% c("US and Outlying Areas", "Oregon"))
```

```{r}
childcount1920USOR <- childcount1920 %>%
  filter(state %in% c("US and Outlying Areas", "Oregon")) %>%
  select(- "race_ethnicity_total3_percent")
```

```{r}
class(childcount1920USOR)
```

```{r}
childcount1920USOR[, 2:7] <- lapply(childcount1920USOR[, 2:7], function(x) round(as.numeric(x), 2))
```

```{r}
# childcount1920 still has all the states. 

write.csv(childcount1920USOR, file = "/Users/hata/Desktop/EDLD652_Diss/Data/childcount1920USOR.csv", row.names = FALSE)
```

```{r}
cc_transposed <- as.data.frame(t(childcount1920USOR))
cc_transposed <- rownames_to_column(cc_transposed, var = "Category")
```

```{r}
cc_transposed$Category <- c("Race/Ethnicity", 
                            "American Indian or Alaska Native", 
                            "Asian", 
                            "Black or African American", 
                            "Hispanic or Latino", 
                            "Native Hawaiian or Pacific Islander", 
                            "Two or More Races", 
                            "White")
```

```{r}
write.csv(cc_transposed, file = "/Users/hata/Desktop/EDLD652_Diss/Data/cc_transposed.csv")
```

### cc csv 2: childcount1920USOR_long 

```{r}
# making it longer yeah
childcount1920USOR_long <- childcount1920USOR %>%
 gather(key = "race", value = "percent", -state)
```

```{r}
str(childcount1920USOR_long$percent)
childcount1920USOR_long$percent <- as.numeric(childcount1920USOR_long$percent)
```

```{r}
childcount1920USOR_long <- childcount1920USOR_long %>%
  mutate(percent = round(percent, 2))
```

```{r}
write.csv(childcount1920USOR_long, file = "/Users/hata/Desktop/EDLD652_Diss/Data/childcount1920USOR_long.csv")
```

C. National and Oregon EXIT data by RACE

```{r}
#|label: load-OSEP-EXIT-data
# importing the data and cleaning it up: 
# This is the year 2013-2022. 
# 1. REMOVED DECEASED and NOT IN USE IN OREGON CATEGORY
# 2. CREATED THE complete_or_not_eligible combining three categories 

byrace <- import(here("Data", "race v.2.xlsx")) %>% 
  clean_names() %>% 
  select(-7, -12) %>% 
  mutate(complete_or_not_eligible = complete_prior_to_reaching_max_age_for_part_c + not_eligible_for_part_b_exit_with_no_referrals + not_eligible_for_part_b_exit_with_referrals_to_other_programs)
```

I FIXED THE MISSING COLUMN by adding back part_b_eligibility_not_determined. I think this is what I can use for CHI-SQUARE WITH RESIDUALS?

```{r}

agg_by_race_and_state <- byrace %>% 
  group_by(race, area) %>% 
  summarize(exit_total = sum(exiting_total2), 
            withdrawal_by_parent = sum(withdrawal_by_parent),
            attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful),
            moved_out_of_state = sum(moved_out_of_state),
            part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c),
            complete_or_not_eligible = sum(complete_or_not_eligible), 
            part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined))
```

I should be able to export df to excel this way but haven't tried it yet.

```{r}
# library(writexl)
# df <- tibble::tibble(A = 1:5, B = 6:10, C = 11:15)  # Example tibble
# write_xlsx(df, "my_data.xlsx")  # Saves to an Excel file 
```

agg_by_race_and_state

```{r}
# aggregated by race for OR
race_oregon <- agg_by_race_and_state %>%
  filter(area == "Oregon")
```

```{r}
race_us <- agg_by_race_and_state %>% 
  filter(area == "US and Outlying Areas") 
```

```{r}
race_us <- race_us %>% 
  select(-area)
```

```{r}
race_us <- race_us %>%
  mutate(race = recode(race,
    "AM" = "Alaska Native or American Indian",
    "AS" = "Asian",
    "BL" = "Black or African American",
    "HI" = "Hispanic or Latino",
    "WH" = "White",
    "MU" = "Two or More Races",
    "PI" = "Pacific Islander"
  ))

```

```{r}
race_us
```

```{r}
us_data_long <- race_us %>% 
  pivot_longer(
    cols = 3:7, 
    values_to = "values",
    names_to = "names"
  ) %>% 
  group_by(race) %>% 
  mutate(percentage = round(values/exit_total, digits = 4))
```

```{r}
us_data_long
```

```{r}
us_data_wide <- us_data_long %>% 
  select(-c(exit_total,values)) %>% 
  pivot_wider(
    names_from = names,
    values_from = percentage
  ) 
```

OH NO where did Part B eligibility not determined go?!?!?

```{r}
# MORE RECENTLY UPDATED in this - don't look at v2.qmd
us_data_wide <- us_data_wide %>% 
  rename(
    "Race" = race, 
    "Disqualified" = attempts_to_contact_unsuccessful, 
    "Moved Out" = moved_out_of_state, 
    "Not Determined" = part_b_eligibility_not_determined, 
    "Not Eligible" = complete_or_not_eligible, 
    "Part B Eligible" = part_b_eligible_exiting_part_c,
    "Withdrawal" = withdrawal_by_parent
  ) %>% 
  select("Race", 
         "Disqualified", 
         "Moved Out", 
         "Not Determined", 
         "Not Eligible", 
         "Part B Eligible", 
         "Withdrawal", 
         everything())
```

I'm trying out to see if I can do the chi-square with residuals (per \# <https://chatgpt.com/share/67a1833d-9fc4-8012-8193-b6fc358a9687>)

Chi-square with Residuals 1:

# ABOVE THIS EVERYTHING RUNS.

# SOMEHOW THE race_matrix LOST THE RACE CATEGORIES

# \* I want to remove the total exit column

# \* do i need to make it numeric

```{r}
race_matrix <- as.matrix(race_us[, -1, drop = FALSE])  
```

```{r}
race_matrix <- apply(race_matrix, 2, as.numeric)
```

```{r}
# race_matrix <- as.matrix(race_us[ , -1, -2])
# race_matrix <- apply(race_matrix, 2, as.numeric)
```

R doesn't like spaces or dashes / - that's why we did clean names, it could work but it can be tricky later

```{r}
rownames(race_matrix)
```

```{r}
rownames(race_matrix) <- c(
  "Alaska Native/American Indian", 
  "Asian", 
  "Black/African American", 
  "Hispanic/Latino", 
  "More than Two Races", 
  "Pacific Islander", 
  "White"
  ) 
```

## I have to rename the categories, and then alphabetize them

```{r}
colnames(race_matrix) <- c(
  "Not Determined", 
  "Not Eligible", 
  "Part B Eligible", 
  "Moved Out", 
  "Disqualified", 
  "Withdrawn", 
  "Exit Total"
  )
```

```{r}
colnames(race_matrix)
```

```{r}
race_matrix <- race_matrix[
  order(colnames(race_matrix))
]
```

Chi-square with Residuals 2:

```{r}
chi_result <- chisq.test(race_matrix)
```

Chi-square with Residuals 3:

Cameron: Residuals are what we are measuring anyway. If nothing was happening, what would be the expected values in the cells in the matrix (so the residuals = differences between expected and what we see) so it's a raw differences

# **LINA: IS THIS CORRECTLY RUN??**

```{r}
print(chi_result$stdres)
```

Chi-square with Residuals 4:

```{r}
# DON'T USE THIS ONE 
# residuals_df <- as.data.frame(
#  as.table(chi_result$stdres))
```

# HELP: How can I visualize better? Names

Chi-square with Residuals: Viz 1 (HEATMAP)

```{r}
str(residuals_df)
residuals_df$Freq <- as.numeric(residuals_df$Freq)
```

```{r}
str(residuals_df)
```

```{r}
ggplot(residuals_df, aes(Var1, Var2, fill = Freq)) +
  geom_tile() +
  scale_fill_gradient2(low = "blue", mid = "white", high = "red") +
  labs(title = "Chi-Square Standardized Residuals",
       x = "Race", y = "Exit Reasons") +
  theme_minimal()
```

Chi-square with Residuals: Viz 2 (CORRPLOT: https://www.sthda.com/english/wiki/chi-square-test-of-independence-in-r#google_vignette)

# DOES IT JUST NOT WORK ON DF because it's long?

```{r}
#drop total column from race_matrix. I learned that I CANNOT USE SELECT() ON MATRIX FILES SO I CONVERTED IT BACK TO DF THEN BACK TO MATRIX AGAIN 
# race_matrix <- as.data.frame(race_matrix)
# race_matrix <- race_matrix 
# rownames(residuals_df) <- c(
#  "Alaska Native/American Indian", 
#  "Asian", 
#  "Black/African American", 
#  "Hispanic/Latino", 
#  "More than Two Races", 
#  "Pacific Islander", 
#  "White")
# already taken out 
# %>%  select(-exit_total) 
```

## Why did we make the residuals_df ???

```{r}
# residuals_df <- residuals_df[
#  order(colnames(residuals_df))
#]
```

corrplot :) Trial 1: <https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html>

```{r}
chisq <- chisq.test(race_matrix)
corrplot(chisq$residuals, 
         is.cor = FALSE) 
```

corrplot trial 2:

Cameron helping me with the change labels on google.

RENAMED THE CATEGORIES

```{r}
dim(race_matrix)
colnames(race_matrix)
```

# NOT WORKING - help!

```{r}
# chisq <- chisq.test(race_matrix)

#Cameron 
# colnames(chisq$residuals) <- c("Withdrawal", 
#                     "Disqualification", 
#                     "Moved Out", 
#                     "Part B Eligible", 
#                     "Not Eligible", 
#                     "Not Determined")
```

REORDERED THE CATEGORIES ALPHABETICALLY I thought...?

# AND HERE, I MADE THE residual_matrix but why

```{r}
residual_matrix <- as.matrix(chisq$residuals)
col_order <- order(colnames(residual_matrix))
row_order <- order(rownames(residual_matrix))
residual_matrix <- residual_matrix[row_order, col_order]
```

# WHYYYYYY I just want to rename the rows and columns for corrplot

```{r}
rownames(residual_matrix) <- c(
  "Alaska Native/American Indian" = 1, 
  "Asian" = 2, 
  "Black/African American" = 3, 
  "Hispanic/Latino" = 4, 
  "More than Two Races" = 5, 
  "Pacific Islander" = 6, 
  "White" = 7) 
```

```{r}
corrplot(residual_matrix, 
         method = 'shade', 
         is.corr = FALSE) 
```

```{r}
# maybe use this for dissertation? (FOR RESEARCHER AUDIENCE)
corrplot(residual_matrix, 
         method = 'number', 
         is.corr = FALSE) 
```

```{r}
corrplot(residual_matrix, 
         method = 'pie', 
         is.corr = FALSE)
```

```{r}
# USE THIS AS THE FINAL PROJECT VISUALIZATION 
corrplot(residual_matrix, 
         method = 'circle', 
         is.corr = FALSE)
```

```         
```
