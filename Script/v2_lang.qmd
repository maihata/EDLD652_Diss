---
title: "v2"
author: "Maiko Hata"
format: 
  pdf:
    mainfont: "Times New Roman"
    sansfont: "Times New Roman"
fig-width: 6
fig-height: 4
csl: apa.csl
execute: 
  eval: true 
  echo: false
  message: false 
  warning: false
editor: visual
engine: knitr
---

```{r}
library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
```

C. Oregon data by LANGUAGES

```{r}
# importing the data and clinining up: 
# 1. REMOVED DECEASED 
# 2. CREATED THE complete_or_not_eligible combining three categories 

bylang <- import("/Users/hata/Desktop/EDLD652_Diss/Data/ODE data v3.xlsx") %>% 
  clean_names() %>% 
  select(-6) %>%
  mutate(complete_or_not_eligible = no_longer_eligible_for_part_c_prior_to_reaching_age_three + not_eligible_for_part_b_exit_with_no_referrals +
not_eligible_for_part_b_exit_with_referrals_to_other_programs)

view(bylang)
```

```{r}
agg_by_lang <- bylang %>% 
  group_by(primary_language) %>% 
  summarize(exit_total = sum(total), 
            withdrawal_by_parent = sum(withdrawal_by_parent), 
            attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful),
            moved_out_of_state = sum(moved_out_of_state),
            part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c),
            complete_or_not_eligible = sum(complete_or_not_eligible), 
            part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined))

# FROM v1: 
# aggregated by race for OR
#race_oregon <- agg_by_race_and_state %>%
 # filter(area == "Oregon")

# aggregated by race for US
#race_us <- agg_by_race_and_state %>% 
 # filter(area == "US and Outlying Areas")
```

```{r agg_by_lang_no_SL  take out Sign Language and NA rows}

agg_by_lang_no_SL <- agg_by_lang %>% 
  filter(primary_language != "Sign languages")
```

```{r}
# renaming the category names 
agg_by_lang <- agg_by_lang %>% 
  rename(
    "Primary Language" = primary_language, 
    "Withdrawn" = withdrawal_by_parent, 
   "Disqualified" = attempts_to_contact_unsuccessful, 
"Moved Out" = moved_out_of_state, 
    "Part B Eligible" = part_b_eligible_exiting_part_c, 
    "Not Eligible" = complete_or_not_eligible, 
    "Not Determined" = part_b_eligibility_not_determined, 
  )
```

```{r}
# reorganizing columns alphabetically 
agg_by_lang <- agg_by_lang %>% 
  select("Primary Language", sort(setdiff(names(.), "Primary Language")))
```

```{r}
write.csv(agg_by_lang, 
          file =  "/Users/hata/Desktop/EDLD652_Diss/Data/agg_by_lang.csv", 
          row.names = FALSE)
```

```{r}
kable(agg_by_lang, 
      caption = "Initial Oregon Data by Home Languages") %>%
  kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
```

### I first tried to to make a new version of agg_by_lang with combined Chinese, Russian, ASL, and Vietnamese. But chi-square didn't run as it still had a cell with "0" for "Not Determined".

```{r}
# Step 1: Define languages to combine
langs_to_combine <- c("Chinese", 
                      "Russian", 
                      "Sign languages", 
                      "Vietnamese")

# Step 2: Separate rows to keep and combine
df_keep <- agg_by_lang[!(agg_by_lang$`Primary Language` 
                         %in% langs_to_combine), ]
df_combine <- agg_by_lang[agg_by_lang$`Primary Language` 
                          %in% langs_to_combine, ]

# Step 3: Sum the numeric columns
combined_row <- df_combine |>
  dplyr::select(-`Primary Language`) |>
  colSums()

# Step 4: Create the combined row as a data frame
combined_df <- data.frame(`Primary Language` = 
                            "Combined Chi/Rus/SL/Vie", t(combined_row))

# Step 5: Make sure column names match exactly
names(combined_df) <- names(df_keep)

# Step 6: Combine into a new data frame
agg_by_lang_2 <- rbind(df_keep, combined_df)
```

### So, I had to combine Chinese, Russian, SL, Vietnamese, AND OTHER LANGUAGES which included any combinations of 2 or more or any other languages :( â€” definitely a limitation!!!

## Did I COMBINE IT RIGHT? IS SPANISH STAYING IN THERE? I THINK SO, but WHY IT'S NOT ALPHABETICAL??

```{r}
# Step 1: Define languages to combine
langs_to_combine <- c("Chinese", 
                      "Russian", 
                      "Sign languages", 
                      "Vietnamese", 
                      "Other languages")

# Step 2: Separate rows to keep and combine
df_keep <- agg_by_lang[!(agg_by_lang$`Primary Language` 
                         %in% langs_to_combine), ]
df_combine <- agg_by_lang[agg_by_lang$`Primary Language` 
                          %in% langs_to_combine, ]

# Step 3: Sum the numeric columns
combined_row <- df_combine |>
  dplyr::select(-`Primary Language`) |>
  colSums()

# Step 4: Create the combined row as a data frame
combined_df <- data.frame(`Primary Language` = 
                            "Other Languages and Ch/Ru/SL/Vi", t(combined_row))

# Step 5: Make sure column names match exactly
names(combined_df) <- names(df_keep)

# Step 6: Combine into a new data frame
agg_by_lang_3 <- rbind(df_keep, combined_df)
```

```{r}
write.csv(agg_by_lang_2, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/agg_by_lang_2.csv")
```

```{r}
write.csv(agg_by_lang_3, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/agg_by_lang_3.csv")
```

## Now, I have to make the agg_by_lang_2 into corrplot()

```{r}
agg_by_lang_3_matrix <- as.matrix(
  agg_by_lang_3[, 3:8]
)
```

```{r}
chi_results_lang_3_oregon <- chisq.test(agg_by_lang_3_matrix)
chi_results_lang_3_oregon
```

Pearson's Chi-squared test

data: agg_by_lang_3_matrix X-squared = 214.54, df = 10, p-value \< 2.2e-16

```{r}
chisq.test(agg_by_lang_3_matrix, correct = FALSE)$stdres
```

```{r}
adj_std_res_lang_oregon <- chisq.test(agg_by_lang_3_matrix)
```

```{r}
# plot.new()
# dev.off()
```

```{r}
colnames(chi_results_lang_3_oregon$stdres) <- c(
  "Withdrawal", 
  "Dismissed", 
  "Moved Out", 
  "Part B Eligible", 
  "Not Eligible", 
  "Not Determined")
```

```{r}
rownames(chi_results_lang_3_oregon$stdres) <- c(
  "English", 
  "Spanish", 
  "Other Languages/Multiple Languages"
)
```

```{r}
chi_results_lang_3_oregon$stdres <- chi_results_lang_3_oregon$stdres[, order(colnames(chi_results_lang_3_oregon$stdres))]
```

```{r}
corrplot(chi_results_lang_3_oregon$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.8, 
         tl.col = "black", 
         cl.cex = 0.7,     
         cl.offset = 1,    
         cl.ratio = 0.2)  
```

Then, I have to make the agg_by_lang_2 for DQ vs other exits by making calcurltions that shows that the DQ vs OtherExits

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}
# combined_C_R_SL_V <- c(
#  "Chinese", 
#  "Russian", 
#  "Sign languages", 
#  "Vietnamese")

# subset_df_languages <- agg_by_lang[
#  agg_by_lang$`Primary Language`
#  %in% combined_C_R_SL_V, ]
  
# combined_row <- subset_df_languages |>
#  dplyr::select(-`Primary Language`) |>
#  colSums()
```

```{r}
# combined_C_R_SL_V <- data.frame(`Primary Language` = "Combined Group", t(combined_row))
```

```{r}
# agg_by_lang_w_combined_languages <-
#  rbind(agg_by_lang, combined_C_R_SL_V)
```

```{r}

```

```{r}

```

```{r}

```

```{r}

```

```{r}

```
