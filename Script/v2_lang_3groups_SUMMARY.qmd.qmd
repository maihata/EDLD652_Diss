---
title: "v2_lang_3groups_SUMMARY.qmd"
author: "Maiko Hata"
format: pdf
execute: 
  eval: true 
  echo: true
  message: true 
  warning: true
  error: true
editor: visual
engine: knitr
---

```{r}
library(readr)
library(dplyr)

path <- "/Users/maiko/Desktop/EDLD652_Diss/Data"

dismissed_l <- read_csv(file.path(path,"summary_dismissed_by_language.csv"),    show_col_types = FALSE) %>% mutate(Category="Dismissed")
movedout_l  <- read_csv(file.path(path,"summary_movedout_by_language.csv"),     show_col_types = FALSE) %>% mutate(Category="Moved Out")
notelig_l   <- read_csv(file.path(path,"summary_noteligible_by_language.csv"),  show_col_types = FALSE) %>% mutate(Category="Not Eligible")
partb_l     <- read_csv(file.path(path,"summary_partb_eligible_by_language.csv"), show_col_types = FALSE) %>% mutate(Category="Part B Eligible")
withd_l     <- read_csv(file.path(path,"summary_withdrawn_by_language.csv"),    show_col_types = FALSE) %>% mutate(Category="Withdrawn")

all_lang <- bind_rows(dismissed_l, movedout_l, notelig_l, partb_l, withd_l) %>%
  mutate(
    Primary.Language = factor(Primary.Language, levels = c("English","Spanish","Other Languages")),
    Category         = factor(Category, levels = c("Dismissed","Moved Out","Not Eligible","Part B Eligible","Withdrawn")),
    P_Value          = suppressWarnings(as.numeric(P_Value)),
    ns               = is.na(P_Value) | P_Value >= 0.05,  # TRUE = non-significant
    label            = sprintf("%.2f", Odds_Ratio)
  )

# sanity check
names(all_lang)
table("ns" = "ns" %in% names(all_lang))

```

```{r}
library(ggplot2)

# optional: order languages A→Z from top
all_lang$Primary.Language <- factor(all_lang$Primary.Language,
                                    levels = rev(sort(levels(all_lang$Primary.Language))))

ggplot(all_lang, aes(Category, Primary.Language)) +
  geom_tile(aes(fill = Odds_Ratio), color = "white") +
  scale_fill_gradient2(low = "#a50026", mid = "white", high = "#081d58",
                       midpoint = 1, name = "Odds Ratio") +
  geom_tile(data = dplyr::filter(all_lang, ns), fill = "grey60", color = "white") +
  geom_text(aes(label = label, color = ns), size = 3.6) +
  scale_color_manual(values = c(`TRUE`="white", `FALSE`="black"), guide = "none") +
  labs(x = "Exit Category", y = "Primary Language")

```

```{r}
library(ggplot2)
library(dplyr)

# (optional) order languages A→Z from top
all_lang <- all_lang %>%
  mutate(Primary.Language = factor(Primary.Language,
                                   levels = rev(sort(levels(Primary.Language)))))

ggplot(all_lang, aes(Category, Primary.Language)) +
  geom_tile(aes(fill = Odds_Ratio), color = "white") +
  scale_fill_gradient2(low = "#a50026", mid = "white", high = "#081d58",
                       midpoint = 1, name = "Odds Ratio") +
  # gray overlay for non-significant cells
  geom_tile(data = dplyr::filter(all_lang, ns), fill = "grey60", color = "white") +
  # numbers on tiles (white on gray, black otherwise)
  geom_text(aes(label = label, color = ns), size = 4) +
  scale_color_manual(values = c(`TRUE` = "white", `FALSE` = "black"), guide = "none") +
  labs(x = "Exit Category", y = "Primary Language") +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid = element_blank(),
    axis.title.x = element_text(size = 16),
    axis.title.y = element_text(size = 16),
    axis.text.x  = element_text(size = 13, angle = 30, hjust = 1),
    axis.text.y  = element_text(size = 13),
    legend.title = element_text(size = 13),
    legend.text  = element_text(size = 12)
  )

```

```{r}
# thresholds for when tile is "dark" enough to need white text
low_red   <- 0.75   # OR below this → white text
high_blue <- 1.25   # OR above this → white text

# (optional) order languages A→Z from top + compute text color
all_lang <- all_lang %>%
  dplyr::mutate(
    Primary.Language = factor(Primary.Language,
                              levels = rev(sort(levels(Primary.Language)))),
    txt_col = ifelse(ns | Odds_Ratio < low_red | Odds_Ratio > high_blue, "white", "black")
  )

ggplot(all_lang, aes(Category, Primary.Language)) +
  geom_tile(aes(fill = Odds_Ratio), color = "white") +
  scale_fill_gradient2(low = "#a50026", mid = "white", high = "#081d58",
                       midpoint = 1, name = "Odds Ratio") +
  # gray overlay for non-significant cells
  geom_tile(data = dplyr::filter(all_lang, ns), fill = "grey60", color = "white") +
  # numbers on tiles: white on gray OR extreme colors, black otherwise
  geom_text(aes(label = label, color = txt_col), size = 4) +
  scale_color_identity(guide = "none") +
  labs(x = "Exit Category", y = "Primary Language") +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid = element_blank(),
    axis.title.x = element_text(size = 16),
    axis.title.y = element_text(size = 16),
    axis.text.x  = element_text(size = 13, angle = 30, hjust = 1),
    axis.text.y  = element_text(size = 13),
    legend.title = element_text(size = 13),
    legend.text  = element_text(size = 12)
  )

```
