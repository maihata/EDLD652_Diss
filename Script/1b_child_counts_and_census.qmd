---
title: "Child Count and Census"
author: "Maiko Hata"
format: 
  pdf:
    mainfont: "Times New Roman"
    sansfont: "Times New Roman"
fig-width: 6
fig-height: 4
csl: apa.csl
execute: 
  eval: true 
  echo: false
  message: false 
  warning: false
editor: visual
engine: knitr
---

```{r}
library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
library(tidyr)
library(readr)
```

1.  Import the excel sheet of racial groups represented in census 2020 and EI childcount 19-20

    ### DON'T USE THESE CHUNKS for VIZ - see Excel "use_this_replacement_racial_group_representation" - "2020 national CC vs census char" sheet for the representation chart.

```{r}
# child_count_vs_census <- import("/Users/hata/Desktop/EDLD652_Diss/Data/use_this_replacement_racial_group_representation.xlsx", sheet = "2020 national CC vs census")

## I used to use the file in "Old_dont_use" excel and it worked 
```

```{r}
# print(child_count_vs_census)
```

```{r}
# colnames(child_count_vs_census)
```

```{r}
# child_count_vs_census <- child_count_vs_census %>% 
#  rename(Group = `...1`)
```

```{r}
# I ACCIDENTALLY DELETED THE "-" IN cols = -`...1`!!! Good job, me, figuring it out with ChatGPT!!
# child_count_vs_census_long <- child_count_vs_census %>% 
#   pivot_longer(
#    cols = - Group, 
#     names_to = "Race", 
#     values_to = "Percentage"
#  )
```

```{r}
# ggplot(child_count_vs_census_long, 
#        aes(x = Race, 
#           y = Percentage, 
#           fill = "Group")) +
#  geom_bar(stat = "identity") +
#  labs(title = "Child Count vs Census by Race",
#       x = "Race",
#       y = "Percentage",
#       fill = "Location") +  
#  theme_minimal()
```

```{r}
# stacked bar - added "dodge" 

# library(ggplot2)

# ggplot(child_count_vs_census_long, 
#       aes(x = Race, 
#           y = Percentage, 
#          fill = "Group")) +  
#  geom_bar(stat = "identity", position = "dodge") +  
#  labs(title = "Child Count vs Census by Race",
#       x = "Race",
#       y = "Percentage",
#       fill = "Location") +
#  theme_minimal()
```

```{r}
# colnames(child_count_vs_census)
```

```{r}
# realphabetizing the X axis 
# child_count_vs_census_long <- child_count_vs_census_long %>%
#  mutate(Race = factor(Race, levels = c(
#   "American Indian or Alaska Native", 
#    "Asian", 
#    "Black or African American", 
#   "Hispanic/Latino", 
#    "Native Hawaiian or Pacific Islander", 
#    "Two or More Races", 
#    "White"))) 
```

```{r}
#child_count_vs_census_long <- child_count_vs_census_long %>%
#  mutate(Race = fct_rev(Race))
```

```{r}
#library(readr)

#write_csv(child_count_vs_census_long, "/Users/hata/Desktop/EDLD652_Diss/Data/child_count_vs_census_long.csv")
```

```{r}
# flipping x and y 
#ggplot(child_count_vs_census_long, 
#       aes(x = Percentage, 
#           y = Race, 
#           fill = "Group")) +  
#  geom_bar(stat = "identity", position = "dodge") +  
#  labs(title = "Child Count vs Census by Race",
#       x = "Percentage",
#       y = "Race",
#       fill = "Location") +
#  theme_minimal(base_family = "Times New Roman")
```

```{r}
# library(ggplot2)
# library(viridis)

# ggplot(child_count_vs_census_long, 
#       aes(x = Percentage, 
#           y = Race, 
#           fill = "Group")) +  
#  geom_bar(stat = "identity", position = "dodge") +  
#  geom_text(aes(label = Percentage),  # Add data labels
#            position = position_dodge(width = 0.9),  # Align labels with bars
#            vjust = -0.3,  # Position labels above bars
#            size = 3,       # Adjust text size if needed
#            family = "Times New Roman") +  # Font for labels
  
#  labs(title = "Child Count vs Census by Race",
#       x = "Percentage",
#       y = "Race",
#       fill = "Location") +
#  theme_minimal(base_family = "Times New Roman")

```

## Child count vs census (2020) BUT BY NUMBERS not % so I can run chi-square

```{r}
# 6/4/25 - runs, redid the excel source to make sure 
child_count_vs_census_number <- import("/Users/hata/Desktop/EDLD652_Diss/Data/use_this_replacement_racial_group_representation.xlsx", sheet = "2020 national cc vs census numb")
```

```{r}
# 6/8/25 using different sheet, num2, without HISPANIC 
child_count_vs_census_num2_noHis <- import("/Users/hata/Desktop/EDLD652_Diss/Data/use_this_replacement_racial_group_representation.xlsx", sheet = "2020 national CC vs census num2")
```

```{r}
head(child_count_vs_census_number)
```

```{r}
# num2 sheet with NO HISPANIC
head(child_count_vs_census_num2_noHis)
```

```{r}
write.csv(child_count_vs_census_number, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/childcount_vs_census_number.csv", row.names = FALSE)
```

```{r}
# num2 sheet with NO HISPANIC
write.csv(child_count_vs_census_num2_noHis, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/childcount_vs_census_num2_noHis.csv", row.names = FALSE)
```

### 6/5/25: I was going to transpose the dataset so it shows well, but not sure if it's worth it...?

```{r}
# transposed_matrix <- t(child_count_vs_census_number_matrix)

```

### Making child_count_vs_census_number into matrix so I can run corrplot().

-   Save it as matrix

```{r}
child_count_vs_census_number <- child_count_vs_census_number
```

```{r}
# num2 sheet with NO HISPANIC
child_count_vs_census_num2_noHis <- child_count_vs_census_num2_noHis
```

-   Set the row names from first column, because for a chi-square test, you want this stored as a **matrix with named rows**. So, rownames(df_chi) \<- df_chi\[\[1\]\] Takes the first column (e.g., `c("General Population", "EI Population")`) and assigns those as **row names** of the data frame to prepare the structure for conversion to a matrix.

```{r}
rownames(child_count_vs_census_number) <- child_count_vs_census_number[[1]]
```

```{r}
# num2 sheet with NO HISPANIC
rownames(child_count_vs_census_num2_noHis) <- child_count_vs_census_num2_noHis[[1]]
```

-   Drop the first column now that it's row names

```{r}
 child_count_vs_census_number <- child_count_vs_census_number %>% 
  select(-1)
```

```{r}
# num2 sheet with NO HISPANIC
 child_count_vs_census_num2_noHis <- child_count_vs_census_num2_noHis %>% 
  select(-1)
```

-   Convert to a matrix

```{r}
child_count_vs_census_number_matrix <- as.matrix(child_count_vs_census_number)
```

```{r}
# num2 sheet with NO HISPANIC
child_count_vs_census_num2_noHis_matrix <- as.matrix(child_count_vs_census_num2_noHis)
```

-   Run chi-square and see the results

```{r}
chi_results_cc_vs_census_number <- chisq.test(child_count_vs_census_number_matrix)

chi_results_cc_vs_census_number
```

```{r}
# num2 sheet with NO HISPANIC
chi_results_cc_vs_census_num2_noHis <- chisq.test(child_count_vs_census_num2_noHis_matrix)

chi_results_cc_vs_census_num2_noHis
```

Pearson's Chi-squared test

data: child_count_vs_census_number_matrix X-squared = 26956, df = 6, p-value \< 2.2e-16

-   View standardized residues

```{r}
chi_results_cc_vs_census_number$stdres
```

```{r}
# num2 sheet with NO HISPANIC
chi_results_cc_vs_census_num2_noHis$stdres
```

-   chi_results_cc_vs_census_number\$stdresSave the results with standardized residues

```{r}
chisq.test(child_count_vs_census_number_matrix, 
           correct = FALSE)$stdres
```

```{r}
# num2 sheet with NO HISPANIC
chisq.test(child_count_vs_census_num2_noHis_matrix, 
           correct = FALSE)$stdres
```

```{r}
adj_std_res_race_us_representation <- 
  chisq.test(child_count_vs_census_number_matrix)
```

```{r}
# num2 sheet with NO HISPANIC
adj_std_res_race_us_rep_noHis <- 
  chisq.test(child_count_vs_census_num2_noHis_matrix)
```

### KABLE() of the standard residuals for national racial representation in EI

```{r}
#6/5/25 Trying to save the chi-residuals results in a kable table
library(tibble)
library(knitr)
library(kableExtra)

# Step 1: Extract standardized residuals matrix
stdres_matrix_cc_census_national <- adj_std_res_race_us_representation$stdres

# Step 2: Convert to data frame and preserve row names
stdres_df_cc_census_national <- as.data.frame(stdres_matrix_cc_census_national)
stdres_df_cc_census_national <- rownames_to_column(stdres_df_cc_census_national, var = "Group")

# Step 3: Create a clean kable table
kable(stdres_df_cc_census_national, digits = 2, caption = "Standardized Residuals from Chi-Square Test") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  column_spec(1, width = "4cm") %>%  # Adjust widths as needed
  column_spec(2:ncol(stdres_df_cc_census_national), width = "2cm") %>%
  kable_classic(full_width = FALSE, html_font = "Cambria")

```

```{r}
# num2 sheet with NO HISPANIC
library(tibble)
library(knitr)
library(kableExtra)

# Step 1: Extract standardized residuals matrix
stdres_matrix_cc_census_noHis <- chi_results_cc_vs_census_num2_noHis$stdres

# Step 2: Convert to data frame and preserve row names
stdres_df_cc_census_noHis <- as.data.frame(stdres_matrix_cc_census_noHis)
stdres_df_cc_census_noHis <- rownames_to_column(stdres_df_cc_census_noHis, var = "Group")

# Step 3: Create a clean kable table
kable(stdres_df_cc_census_noHis, digits = 2, caption = "Standardized Residuals from Chi-Square Test (Race Only, No Hispanic)") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  column_spec(1, width = "4cm") %>%
  column_spec(2:ncol(stdres_df_cc_census_noHis), width = "2cm") %>%
  kable_classic(full_width = FALSE, html_font = "Cambria")

```

```{r}
plot.new()
dev.off()
```

```{r}
print(chi_results_cc_vs_census_number$stdres)
```

```{r}
# num2 sheet with NO HISPANIC
print(chi_results_cc_vs_census_num2_noHis$stdres)
```

-   The below didn't run first because it had "/" in "Hispanic/Latino" so I changed it to "... or ..."

```{r}
colnames(chi_results_cc_vs_census_number$stdres)
```

```{r}
# num2 sheet with NO HISPANIC
colnames(chi_results_cc_vs_census_num2_noHis$stdres)
```

```{r}
str(chi_results_cc_vs_census_number$stdres)
```

```{r}
# num2 sheet with NO HISPANIC
str(chi_results_cc_vs_census_num2_noHis$stdres)
```

```{r}
print(chi_results_cc_vs_census_number$stdres)
```

```{r}
# num2 sheet with NO HISPANIC
print(chi_results_cc_vs_census_num2_noHis$stdres)
```

```{r}
colnames(chi_results_cc_vs_census_number$stdres)
```

```{r}
# num2 sheet with NO HISPANIC
colnames(chi_results_cc_vs_census_num2_noHis$stdres)
```

```{r}
colnames(chi_results_cc_vs_census_number$stdres) <- c(
  "AI/AN", 
"Asian", 
  "Black", 
  "Hispanic", 
  "NH/PI", 
  "Two+ Races", 
  "White")
```

```{r}
# num2 sheet with NO HISPANIC
colnames(chi_results_cc_vs_census_num2_noHis$stdres) <- c(
  "AI/AN", 
"Asian", 
  "Black", 
  "NH/PI", 
  "Two+ Races", 
  "White")
```

```{r}
rownames(chi_results_cc_vs_census_number$stdres) <- c(
  "General Pop", 
  "EI Pop"
)
```

```{r}
# num2 sheet with NO HISPANIC
rownames(chi_results_cc_vs_census_num2_noHis$stdres) <- c(
  "General Pop", 
  "EI Pop"
)
```

```{r}
chi_results_cc_vs_census_number$stdres <- chi_results_cc_vs_census_number$stdres[, order(colnames(chi_results_cc_vs_census_number$stdres))]
```

```{r}
# num2 sheet with NO HISPANIC
chi_results_cc_vs_census_num2_noHis$stdres <- chi_results_cc_vs_census_num2_noHis$stdres[, order(colnames(chi_results_cc_vs_census_num2_noHis$stdres))]
```

```{r}
corrplot(chi_results_cc_vs_census_number$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.8, 
         tl.col = "black", 
         cl.cex = 0.7,     
         cl.offset = 1,    
         cl.ratio = 0.2)  
```

```{r}
# num2 sheet with NO HISPANIC

corrplot(chi_results_cc_vs_census_num2_noHis$stdres, 
         is.cor = FALSE, 
         tl.cex = 0.8, 
         tl.col = "black", 
         cl.cex = 0.7,     
         cl.offset = 1,    
         cl.ratio = 0.2)  
```

```{r}
# num2 sheet with NO HISPANIC

corrplot(
  t(chi_results_cc_vs_census_num2_noHis$stdres),  
  is.cor = FALSE, 
  tl.cex = 0.8, 
  tl.col = "black", 
  cl.cex = 0.7,     
  cl.offset = 1,    
  cl.ratio = 0.2
)

```

```{r}
corrplot(
  chi_results_cc_vs_census_number$stdres, 
  method = "number", 
  is.cor = FALSE,
)

```

```{r}
library(corrplot)
library(RColorBrewer)

corrplot(
  chi_results_cc_vs_census_number$stdres,
  is.cor = FALSE,
  method = "color",
  col = colorRampPalette(rev(brewer.pal(11, "RdBu")))(200),
  addCoef.col = "black",     # show residual numbers
  number.cex = 0.8,          # size of residual numbers
  tl.col = "black",          # axis label color
  tl.cex = 0.9               # axis label size
)
```

```{r}
# num2 sheet with NO HISPANIC
library(corrplot)
library(RColorBrewer)

corrplot(
  chi_results_cc_vs_census_num2_noHis$stdres,
  is.cor = FALSE,
  method = "color",
  col = colorRampPalette(rev(brewer.pal(11, "RdBu")))(200),
  addCoef.col = "black",     # show residual numbers
  number.cex = 0.8,          # size of residual numbers
  tl.col = "black",          # axis label color
  tl.cex = 0.9               # axis label size
)
```

## Odds ratio for representation by race

Kable()

```{r}

# Step 1–6: Same as before
ei_counts <- child_count_vs_census_number_matrix["EI Population", ]
pop_counts <- child_count_vs_census_number_matrix["General Population", ]

total_ei <- sum(ei_counts)
total_pop <- sum(pop_counts)
overall_rate <- total_ei / total_pop
overall_odds <- overall_rate / (1 - overall_rate)

group_rate <- ei_counts / pop_counts
group_odds <- group_rate / (1 - group_rate)
or_vs_pop <- group_odds / overall_odds

or_df <- data.frame(
  Group = names(ei_counts),
  EI_Count = as.numeric(ei_counts),
  Pop_Count = as.numeric(pop_counts),
  EI_Rate = sprintf("%.2f%%", group_rate * 100),
  Odds_Ratio = round(as.numeric(or_vs_pop), 2)
)

or_df <- rbind(
  or_df,
  data.frame(
    Group = "National Average",
    EI_Count = total_ei,
    Pop_Count = total_pop,
    EI_Rate = sprintf("%.2f%%", overall_rate * 100),
    Odds_Ratio = 1
  )
)

rownames(or_df) <- or_df$Group
or_df$Group <- NULL

# ✅ Use colnames() to rename columns
colnames(or_df) <- c("EI Total", "Census Total", "EI Rate", "Odds Ratio")

# Add commas to the counts
or_df$`EI Total` <- format(or_df$`EI Total`, big.mark = ",")
or_df$`Census Total` <- format(or_df$`Census Total`, big.mark = ",")


# Step 7: Display table
library(knitr)
library(kableExtra)

kable(or_df, caption = "Odds Ratios for EI Representation Relative to Population Average") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  kable_classic(full_width = FALSE, html_font = "Cambria")

```

```{r}
# num2 sheet with NO HISPANIC
# SHOWS OR of 1 across. GAH 

# Step 1: Extract counts from matrix
ei_counts_2 <- stdres_matrix_cc_census_noHis["EI Population", ]
pop_counts_2 <- stdres_matrix_cc_census_noHis["General Population", ]

# Step 2: Calculate totals and odds
total_ei_2 <- sum(ei_counts_2)
total_pop_2 <- sum(pop_counts_2)
overall_rate_2 <- total_ei_2 / total_pop_2
overall_odds_2 <- overall_rate_2 / (1 - overall_rate_2)

# Step 3: Group-specific calculations
group_rate_2 <- ei_counts_2 / pop_counts_2
group_odds_2 <- group_rate_2 / (1 - group_rate_2)
or_vs_pop_2 <- group_odds_2 / overall_odds_2

# Step 4: Create initial dataframe
or_df_2 <- data.frame(
  Group_2 = names(ei_counts_2),
  EI_Total_2 = as.numeric(ei_counts_2),
  Census_Total_2 = as.numeric(pop_counts_2),
  EI_Rate_2 = group_rate_2,
  Odds_Ratio_2 = round(as.numeric(or_vs_pop_2), 2)
)

# Step 5: Append National Average row (unformatted)
or_df_2 <- rbind(
  or_df_2,
  data.frame(
    Group_2 = "National Average",
    EI_Total_2 = total_ei_2,
    Census_Total_2 = total_pop_2,
    EI_Rate_2 = overall_rate_2,
    Odds_Ratio_2 = 1
  )
)

# Step 6: Reorder factor levels
or_df_2$Group_2 <- factor(or_df_2$Group_2, levels = c(
  setdiff(sort(unique(or_df_2$Group_2)), "National Average"), "National Average"
))

# Step 7: Format for display
or_df_2$EI_Total_2 <- format(as.numeric(or_df_2$EI_Total_2), big.mark = ",")
or_df_2$Census_Total_2 <- format(as.numeric(or_df_2$Census_Total_2), big.mark = ",")
or_df_2$EI_Rate_2 <- sprintf("%.2f%%", as.numeric(or_df_2$EI_Rate_2) * 100)
or_df_2$Odds_Ratio_2 <- sprintf("%.2f", as.numeric(or_df_2$Odds_Ratio_2))

# Step 8: Display table
library(knitr)
library(kableExtra)

kable(or_df_2, caption = "Odds Ratios for EI Representation Relative to Population Average (No Hispanic)") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  kable_classic(full_width = FALSE, html_font = "Cambria")

```

```{r}
print(or_df)

```

```{r}
# Step 1: Extract counts from matrix
ei_counts <- child_count_vs_census_number_matrix["EI Population", ]
pop_counts <- child_count_vs_census_number_matrix["General Population", ]

# Step 2: Calculate total EI rate and odds
total_ei <- sum(ei_counts)
total_pop <- sum(pop_counts)
overall_rate <- total_ei / total_pop
overall_odds <- overall_rate / (1 - overall_rate)

# Step 3: Group-specific rates and odds
group_rate <- ei_counts / pop_counts
group_odds <- group_rate / (1 - group_rate)

# Step 4: Odds ratio vs population average
or_vs_pop <- group_odds / overall_odds

# Step 5: Combine into a table (no duplicate group name)
or_df <- data.frame(
  EI_Count = ei_counts,
  Pop_Count = pop_counts,
  EI_Rate = round(group_rate, 4),
  OR_vs_PopAvg = round(or_vs_pop, 2),
  row.names = names(ei_counts)  # keep race names as rownames
)


# Display the updated table
kable(or_df, caption = "Odds Ratios for EI Representation Relative to Population Average") %>%
  kable_styling(full_width = FALSE, position = "center")


# Step 6: Display as kable table
library(knitr)
library(kableExtra)

kable(or_df, caption = "Odds Ratios for EI Representation Relative to Population Average") %>%
  kable_styling(full_width = FALSE, position = "center") %>% 
  kable_classic(full_width = F, html_font = "Cambria")

```

```{r}
# num2 sheet with NO HISPANIC
# Step 1: Extract counts from matrix
# num2 sheet with NO HISPANIC

# Step 1–6: Using stdres_matrix_cc_census_noHis
ei_counts_2 <- stdres_matrix_cc_census_noHis["EI Population", ]
pop_counts_2 <- stdres_matrix_cc_census_noHis["General Population", ]

total_ei_2 <- sum(ei_counts_2)
total_pop_2 <- sum(pop_counts_2)
overall_rate_2 <- total_ei_2 / total_pop_2
overall_odds_2 <- overall_rate_2 / (1 - overall_rate_2)

group_rate_2 <- ei_counts_2 / pop_counts_2
group_odds_2 <- group_rate_2 / (1 - group_rate_2)
or_vs_pop_2 <- group_odds_2 / overall_odds_2

or_df_2 <- data.frame(
  Group_2 = names(ei_counts_2),
  EI_Count_2 = as.numeric(ei_counts_2),
  Pop_Count_2 = as.numeric(pop_counts_2),
  EI_Rate_2 = sprintf("%.2f%%", group_rate_2 * 100),
  Odds_Ratio_2 = round(as.numeric(or_vs_pop_2), 2)
)

or_df_2 <- rbind(
  or_df_2,
  data.frame(
    Group_2 = "National Average",
    EI_Count_2 = total_ei_2,
    Pop_Count_2 = total_pop_2,
    EI_Rate_2 = sprintf("%.2f%%", overall_rate_2 * 100),
    Odds_Ratio_2 = 1
  )
)

rownames(or_df_2) <- or_df_2$Group_2
or_df_2$Group_2 <- NULL

# Rename columns
colnames(or_df_2) <- c("EI Total_2", "Census Total_2", "EI Rate_2", "Odds Ratio_2")

# Format counts with commas
or_df_2$`EI Total_2` <- format(or_df_2$`EI Total_2`, big.mark = ",")
or_df_2$`Census Total_2` <- format(or_df_2$`Census Total_2`, big.mark = ",")

# Step 7: Display table
library(knitr)
library(kableExtra)

kable(or_df_2, caption = "Odds Ratios for EI Representation Relative to Population Average (No Hispanic)") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  kable_classic(full_width = FALSE, html_font = "Cambria")


```

```{r}
# Create a reference row
ref_row <- data.frame(
  Group = "National Average",
  OR = 1,
  Lower = 1,
  Upper = 1
)

# Append the reference row to your OR data frame
or_df <- rbind(or_df, ref_row)

# Reorder factor levels so "National Average" comes last
or_df$Group <- factor(or_df$Group, levels = c(
  setdiff(sort(unique(or_df$Group)), "National Average"), "National Average"
))


```

```{r}
# num2 sheet with NO HISPANIC


```

```{r}
# Optional: reorder factor levels so largest OR is on top

or_df$Group <- factor(or_df$Group, levels = rev(sort(unique(or_df$Group))))

ggplot(or_df, aes(x = OR, y = Group)) +
  geom_point(color = "skyblue", size = 4) +
  geom_errorbarh(aes(xmin = Lower, xmax = Upper), height = 0.2) +
  geom_vline(xintercept = 1, linetype = "dashed", color = "green") +
  geom_text(aes(label = round(OR, 2)), vjust = -1.2, size = 3.5) +
  scale_x_log10() +
  labs(
    title = "Odds Ratios of EI Representation vs. Population Average",
    x = "Odds Ratio (log scale)",
    y = ""
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 12),
    axis.text.x = element_text(size = 12),
    plot.title = element_text(size = 14, face = "bold")
  )

```

```{r}
# num2 sheet with NO HISPANIC
library(ggplot2)

# Rename column to match plotting code (or adjust plot code instead)
or_df$OR <- as.numeric(or_df$OR_vs_PopAvg)

# Dummy CI columns (can be replaced with real CIs if available)
or_df$Lower <- or_df$OR
or_df$Upper <- or_df$OR

# Make sure Group is a factor, ordered for top-to-bottom display
or_df$Group <- factor(or_df$Group, levels = rev(sort(unique(or_df$Group))))

# Plot
ggplot(or_df, aes(x = OR, y = Group)) +
  geom_point(color = "skyblue", size = 4) +
  geom_errorbarh(aes(xmin = Lower, xmax = Upper), height = 0.2) +
  geom_vline(xintercept = 1, linetype = "dashed", color = "green") +
  geom_text(aes(label = round(OR, 2)), vjust = -1.2, size = 3.5) +
  scale_x_log10() +

```
