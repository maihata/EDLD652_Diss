---
title: "1_clean_data"
author: "Maiko Hata"
format: 
  pdf:
    mainfont: "Times New Roman"
    sansfont: "Times New Roman"
fig-width: 7
fig-height: 4
csl: apa.csl
execute: 
  eval: true 
  echo: true
  message: true 
  warning: true
editor: visual
engine: knitr
---

```{r}
#| label: library group

library(tidyverse)
library(here)
library(rio)
library(knitr)
library(gt)
library(DT)
library(reactable)
library(gtsummary)
library(kableExtra)
library(tinytex)
library(janitor)
library(tidylog)
library(sjPlot)
library(lme4)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(pwr)
library(rcompanion)
library(grateful)
library(distill)
library(readxl)
library(scales)
library(tidyr)
library(patchwork)
library(corrplot)
library(distill)
library(tibble)
library(rcartocolor)
library(ggplot2)
library(quarto)
library(gt)
library(clipr)
```

### csv1: 10 exit categories

(for Kable table)

```{r}
exit_categories <- import("/Users/hata/Desktop/EDLD652_Diss/Data/exit_categories.xlsx") %>%
 clean_names() 
```

```{r}
write.csv(exit_categories, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/exit_categories.csv", 
          row.names = FALSE)
```

### csv2: byrace

(imported OSEP excel, 2013-22, US/OR, deceased/continuing in Part C removed, mutated complete_or_not_eligible to combine 3 similar categories)

```{r include=FALSE}
#|label: load-data
# importing the data and cleaning it up

byrace <- import("/Users/hata/Desktop/EDLD652_Diss/Data/race v.2.xlsx") %>% 
  clean_names() %>% 
  select(-7, -12) %>% 
  mutate(
    complete_or_not_eligible = 
      complete_prior_to_reaching_max_age_for_part_c + 
      not_eligible_for_part_b_exit_with_no_referrals + 
      not_eligible_for_part_b_exit_with_referrals_to_other_programs)
```

```{r}
write.csv(byrace, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/byrace.csv", 
          row.names = FALSE)
```

### csv2-b: by_race_with_all_categories

So, I'm making this one on 3/15/25 as I realized the Method Section I'm turning in has a mention of total exit numbers and it sounds like it includes the removed categories (like Deceased and Continuing in Part C still. DIdn't remove like byrace df -7 and -12.

I had trouble doing this to collapse years, but somehow writing the first chunk as csv first with row.names = FALSE had to happen BEFORE i can collapse the years?

```{r}
byrace_w_deceased_continuePartC <- import("/Users/hata/Desktop/EDLD652_Diss/Data/race v.2.xlsx") %>% 
  clean_names() %>% 
  mutate(
    complete_or_not_eligible = 
      complete_prior_to_reaching_max_age_for_part_c + 
      not_eligible_for_part_b_exit_with_no_referrals + 
      not_eligible_for_part_b_exit_with_referrals_to_other_programs)
```

```{r}
write.csv(byrace_w_deceased_continuePartC, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/byrace_w_deceased_continuePartC.csv", 
          row.names = FALSE)
```

```{r}
agg_by_race_and_state_w_deceased_continuePartC <- 
  byrace_w_deceased_continuePartC %>% 
 group_by(race, area) %>% 
  summarize(exit_total = sum(exiting_total2), 
            withdrawal_by_parent = sum(withdrawal_by_parent),
            attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful),
            moved_out_of_state = sum(moved_out_of_state),
            part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c),
            complete_or_not_eligible = sum(complete_or_not_eligible), 
            part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined))
```

```{r}
gt(byrace_w_deceased_continuePartC) 
```

```{r}
agg_by_race_and_state_w_deceased_continuePartC <- 
  agg_by_race_and_state_w_deceased_continuePartC %>%
  group_by(race, area) %>% 
  summarize(
    exit_total = sum(exit_total, na.rm = TRUE), 
    withdrawal_by_parent = sum(withdrawal_by_parent, na.rm = TRUE),
    attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful, na.rm = TRUE),
    moved_out_of_state = sum(moved_out_of_state, na.rm = TRUE),
    part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c, na.rm = TRUE),
    complete_or_not_eligible = sum(complete_or_not_eligible, na.rm = TRUE), 
    part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined, na.rm = TRUE)
  )
```

```{r}
# flipped group_by to area first then race, looks better for kable 
agg_by_race_and_state_w_deceased_continuePartC <- 
  agg_by_race_and_state_w_deceased_continuePartC %>%
  group_by(area, race) %>% 
  summarize(
    exit_total = sum(exit_total, na.rm = TRUE), 
    withdrawal_by_parent = sum(withdrawal_by_parent, na.rm = TRUE),
    attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful, na.rm = TRUE),
    moved_out_of_state = sum(moved_out_of_state, na.rm = TRUE),
    part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c, na.rm = TRUE),
    complete_or_not_eligible = sum(complete_or_not_eligible, na.rm = TRUE), 
    part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined, na.rm = TRUE)
  )
```

```{r}
gt(agg_by_race_and_state_w_deceased_continuePartC)
```

### csv3: agg_by_race_and_state

based on "byrace", dropped the combined 3 categories, so just total + 6 exit categories

```{r}
#| label: aggregated-by-race

# aggregated by race and state
agg_by_race_and_state <- byrace %>% 
  group_by(race, area) %>% 
  summarize(exit_total = sum(exiting_total2), 
            withdrawal_by_parent = sum(withdrawal_by_parent),
            attempts_to_contact_unsuccessful = sum(attempts_to_contact_unsuccessful),
            moved_out_of_state = sum(moved_out_of_state),
            part_b_eligible_exiting_part_c = sum(part_b_eligible_exiting_part_c),
            complete_or_not_eligible = sum(complete_or_not_eligible), 
            part_b_eligibility_not_determined = sum(part_b_eligibility_not_determined))
```

```{r}
write.csv(agg_by_race_and_state, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/agg_by_race_and_state.csv", 
          row.names = FALSE)
```

### csv 4: race_oregon USE THIS FOR TOTAL EXIT COUNTS for 2013-2022 or whatever the years

based on agg_by_race_and_state but Oregon only

```{r}
race_oregon <- agg_by_race_and_state %>%
  filter(area == "Oregon")
```

```{r}
write.csv(race_oregon, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/race_oregon.csv", 
          row.names = FALSE)
```

### csv 5: race_us

```{r}
# aggregated by race for US
race_us <- agg_by_race_and_state %>% 
  filter(area == "US and Outlying Areas")
```

```{r}
race_us <- race_us %>%
  mutate(race = recode(race,
    "AM" = "Alaska Native or American Indian",
    "AS" = "Asian",
    "BL" = "Black or African American",
    "HI" = "Hispanic or Latino",
    "WH" = "White",
    "MU" = "Two or More Races",
    "PI" = "Pacific Islander"
  ))
```

```{r}
# Step 1: Keep only race (col 1) and total (col 3)
race_us_subset <- race_us %>%
  select(race, total = 3)  # assuming column 3 is the total count

# Step 2: Calculate grand total
grand_total <- sum(race_us_subset$total, na.rm = TRUE)

# Step 3: Add grand_total and group ratio columns
race_us_summary <- race_us_subset %>%
  mutate(
    grand_total = grand_total,
    group_ratio = total / grand_total
  )

```

```{r}
library(knitr)
library(kableExtra)

# Create APA-style table with percentage format
race_us_summary %>%
  select(Race = race, Total = total, Proportion = group_ratio) %>%
  mutate(
    Total = formatC(Total, format = "d", big.mark = ","),               # comma for Total
    Proportion = sprintf("%.1f%%", Proportion * 100)                    # convert to % with 1 decimal
  ) %>%
  kable(
    caption = "Proportion of Children by Race in the U.S. (Including Outlying Areas)",
    col.names = c("Race", "Total", "Proportion (%)"),
    align = c("l", "r", "r"),
    format = "html"
  ) %>%
  kable_styling(
    full_width = FALSE,
    position = "center",
    font_size = 12
  ) %>%
  kable_classic(html_font = "Cambria")


```

```{r}
write.csv(race_us, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/race_us.csv", 
          row.names = FALSE)
```

### csv 6: race_us_chart

US Exit reasons by race (deleted "area")

```{r}
race_us_chart <-race_us %>% 
  select(-"area")
```

```{r}
# removed exit_total first, readding it, effectively moving exit total to the last column 
race_us_chart <- race_us %>% 
  select(-area, everything(), -exit_total, exit_total)
```

```{r}
colnames(race_us_chart)
```

```{r}
race_us_chart <- race_us_chart %>% 
  rename(
    "Race" = race, 
    "Withdrawn" = withdrawal_by_parent, 
   "Disqualified" = attempts_to_contact_unsuccessful, 
"Moved Out" = moved_out_of_state, 
    "Part B Eligible" = part_b_eligible_exiting_part_c, 
    "Not Eligible" = complete_or_not_eligible, 
    "Not Determined" = part_b_eligibility_not_determined, 
  )
```

```{r}
race_us_chart <- race_us_chart %>% 
  select("Race", sort(setdiff(names(.), "Race")))
```

```{r}
race_us_chart <- race_us_chart %>% 
  select(-2, -4) 
```

```{r}
# 6/11/25 --- added to put "," every 3 digits 
race_us_chart <- race_us_chart %>%
  mutate(across(where(is.numeric), ~ format(., big.mark = ",", scientific = FALSE)))

```

```{r}
race_us_chart
```

```{r}
write.csv(race_us_chart, 
          file = "/Users/hata/Desktop/EDLD652_Diss/Data/race_us_chart.csv", 
          row.names = FALSE)
```

```{r}
kable(race_us_chart)
```

```{r}
### 6/28/25 --- LINA's redone because the % was not within groups 
library(dplyr)

# Step 1: If not already loaded
# us_race_chart <- read.csv("/Users/hata/Desktop/EDLD652_Diss/Data/us_race_chart.csv", stringsAsFactors = FALSE)

# Step 2: Clean numeric columns
us_race_chart_clean <- us_race_chart %>%
  mutate(across(-Race, ~ as.numeric(gsub(",", "", .)))) %>%
  ungroup()

# Step 3: Select just numeric exit columns
raw_only <- us_race_chart_clean %>% select(-Race)

# Step 4: Compute row totals (per racial group)
row_totals <- rowSums(raw_only, na.rm = TRUE)

# Step 5: Row-wise percentages
percent_matrix <- sweep(raw_only, 1, row_totals, FUN = "/") * 100

# Step 6: Format each value
formatted <- mapply(
  function(p, r) sprintf("%.2f%% (%s)", p, format(r, big.mark = ",")),
  percent_matrix,
  raw_only,
  SIMPLIFY = FALSE
)

# Step 7: Assemble final table
formatted_df <- as.data.frame(formatted, stringsAsFactors = FALSE)
formatted_df$Race <- us_race_chart_clean$Race
formatted_df <- formatted_df %>% select(Race, everything())

# ✅ Step 8: Save with absolute path
write.csv(
  formatted_df,
  "/Users/hata/Desktop/EDLD652_Diss/Data/us_race_chart_formatted_by_row.csv",
  row.names = FALSE
)

```

```{r}
table12 <- read.csv("/Users/hata/Desktop/EDLD652_Diss/Data/us_race_chart_formatted_by_row.csv")
```

```{r}
### TABLE12 7/26/25 BUT! How can I flip the ORDER GAH 
# Step 1: Clean up percentages (if needed)
table12_clean <- table12 %>%
  mutate(across(-Race, ~ str_remove(., "\\s*\\([^)]*\\)"))) %>%
  mutate(across(-Race, ~ as.numeric(str_remove(., "%"))))


table12_clean <- table12_clean %>%
  rename(Dismissed = Disqualified)


# Step 2: Convert to long format
table12_long <- table12_clean %>%
  pivot_longer(
    cols = -Race,
    names_to = "Exit_Reason",
    values_to = "Percentage"
  )

library(stringr)  # Just in case it's not loaded

# Remove periods from Exit_Reason labels
table12_long <- table12_long %>%
  mutate(Exit_Reason = str_replace_all(Exit_Reason, "\\.", " "))

# Step 3: Reorder factors
table12_long <- table12_long %>%
  mutate(
    Race = factor(Race, levels = sort(unique(Race))),  # Alphabetical order
    Exit_Reason = factor(Exit_Reason, levels = sort(unique(Exit_Reason)))  # Alphabetical order
  )

# Step 4: Plot with % labels added
ggplot(table12_long, aes(x = Race, y = Percentage, fill = Exit_Reason)) +
  geom_bar(stat = "identity") +
  geom_text(
    aes(label = sprintf("%.1f%%", Percentage)),
    position = position_stack(vjust = 0.5),
    size = 3,
    color = "black"
  ) +
  coord_flip() +
  scale_x_discrete(limits = rev(levels(table12_long$Race))) +
  labs(x = "Race/Ethnicity", y = "Percentage", fill = "Exit Reason") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_blank()
  )

```

```{r}
### DON'T USE - it's viridis but I can't see the labels 
ggplot(table12_long, aes(x = Race, y = Percentage, fill = Exit_Reason)) +
  geom_bar(stat = "identity") +
  geom_text(
    aes(label = sprintf("%.1f%%", Percentage)),
    position = position_stack(vjust = 0.5),
    size = 3,
    color = "black"
  ) +
  coord_flip() +
  scale_x_discrete(limits = rev(levels(table12_long$Race))) +
  scale_fill_viridis_d(option = "D") +  # Use your colorblind-friendly palette
  labs(x = "Race", y = "Percentage", fill = "Exit Reason") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_blank()
  )

```

```{r}
ggplot(table12_long, aes(x = Race, y = Percentage, fill = Exit_Reason)) +
  geom_bar(stat = "identity") +
  geom_text(
    aes(label = sprintf("%.1f%%", Percentage)),
    position = position_stack(vjust = 0.5),
    size = 3,
    color = "black"
  ) +
  scale_fill_viridis_d(option = "C") +
  labs(x = "Race/Ethnicity", y = "Percentage", fill = "Exit Reason") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_blank()
  )

```

```{r}
library(viridis)

# Get 6 Viridis-C colors
viridis_colors <- viridis(6, option = "C")

# Assign Exit_Reason names in sorted order (alphabetically)
exit_levels <- sort(unique(table12_long$Exit_Reason))

# Create a named color vector and lighten "Dismissed"
exit_colors <- setNames(viridis_colors, exit_levels)

# Lighten the color for "Dismissed"
exit_colors["Dismissed"] <- "#a6d8ff"  # or any lighter blue

```

```{r}
scale_fill_manual(values = exit_colors)

```

```{r}
ggplot(table12_long, aes(x = Race, y = Percentage, fill = Exit_Reason)) +
  geom_bar(stat = "identity") +
  geom_text(
    aes(label = sprintf("%.1f%%", Percentage)),
    position = position_stack(vjust = 0.5),
    size = 3,
    color = "black"
  ) +
  scale_fill_manual(values = exit_colors) +
  labs(x = "Race/Ethnicity", y = "Percentage", fill = "Exit Reason") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_blank()
  )


```
