---
title: "v2_lang_3groups_WITHDRAWN.qmd"
author: "Maiko Hata"
output: html_document
execute: 
  eval: true 
  echo: true
  message: true 
  warning: true
  error: true
editor: visual
engine: knitr
---

```{r}
library(tidyverse)
library(knitr)
library(kableExtra)
library(janitor)
library(tibble)
library(dplyr)
library(epitools)
library(readxl)
library(grateful)
library(distill)
library(readxl)
library(tidyr)
library(corrplot)
library(ggplot2)
library(rio)
library(janitor)
```

```{r}
# ✅ Step 1: Load data and compute Not Moved.Out column
agg_by_lang_3group <- read.csv("/Users/hata/Desktop/EDLD652_Diss/Data/agg_by_lang_3group.csv")

df_lang_movedout <- agg_by_lang_3group %>%
  mutate(Not_Moved.Out = rowSums(select(., -Primary.Language, -Moved.Out)))

```

```{r}
# ✅ Step 2: Compute total counts for Moved.Out and Not Moved.Out
total_movedout_all <- sum(df_lang_movedout$Moved.Out)
total_notmovedout_all <- sum(df_lang_movedout$Not_Moved.Out)

```

```{r}
# ✅ Step 3: Define function to calculate odds ratio for Moved.Out
get_movedout_or <- function(row_index) {
  group <- as.character(df_lang_movedout$Primary.Language[row_index])
  a <- df_lang_movedout$Moved.Out[row_index]
  b <- df_lang_movedout$Not_Moved.Out[row_index]
  c <- total_movedout_all - a
  d <- total_notmovedout_all - b

  if (any(is.na(c(a, b, c, d))) || any(c(a, b, c, d) < 0)) {
    return(NA)
  }

  mat <- matrix(c(a, b, c, d), nrow = 2, byrow = TRUE)
  dimnames(mat) <- list(
    Group = c(group, "Oregon Average"),
    Exit = c("Moved Out", "Not Moved Out")
  )

  oddsratio(mat)
}

```

```{r}

# ✅ Step 4: Loop through each language group
language_list <- seq_len(nrow(df_lang_movedout))
movedout_odds_results <- lapply(language_list, get_movedout_or)
names(movedout_odds_results) <- df_lang_movedout$Primary.Language

```

```{r}
# ✅ Step 5: Build summary table of OR, CI, and p-values
summary_df_odds_movedout_lang <- lapply(movedout_odds_results, function(x) {
  if (is.null(x)) {
    return(data.frame(
      Odds_Ratio = NA,
      Lower_CI = NA,
      Upper_CI = NA,
      P_Value = NA
    ))
  } else {
    data.frame(
      Odds_Ratio = x$measure[2, 1],
      Lower_CI = x$measure[2, 2],
      Upper_CI = x$measure[2, 3],
      P_Value = x$p.value[2, 1]
    )
  }
}) %>%
  bind_rows(.id = "Primary.Language") %>%
  mutate(
    Odds_Ratio = round(Odds_Ratio, 2),
    Lower_CI = round(Lower_CI, 2),
    Upper_CI = round(Upper_CI, 2),
    P_Value = signif(P_Value, 3)
  )

```

```{r}
# ✅ Step 6: Reverse factor levels so English appears at the top in the plot
summary_df_odds_movedout_lang$Primary.Language <- factor(
  summary_df_odds_movedout_lang$Primary.Language,
  levels = rev(c("English", "Spanish", "Other Languages"))
)

```

```{r}
# ✅ Step 7: Plot odds ratios for Moved Out
ggplot(summary_df_odds_movedout_lang, aes(x = Odds_Ratio, y = Primary.Language)) +
  geom_point(aes(color = P_Value < 0.05), size = 4) +
  geom_errorbarh(aes(xmin = Lower_CI, xmax = Upper_CI), height = 0.2) +
  geom_vline(xintercept = 1, linetype = "dashed", color = "green") +
  geom_text(aes(label = sprintf("%.2f", Odds_Ratio)), vjust = -1.2, size = 3.5) +
  scale_x_log10() +
  scale_color_manual(
    values = c("TRUE" = "skyblue", "FALSE" = "gray70"),
    labels = c("FALSE" = "p ≥ .05", "TRUE" = "p < .05")
  ) +
  labs(
    x = "Odds Ratio (log scale)",
    y = "",
    color = "Statistical Significance",
    title = "Odds Ratios for 'Moved Out' Exit Category by Primary Language (Oregon)"
  ) +
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 12),
    axis.text.x = element_text(size = 12),
    plot.title = element_text(size = 14)
  )

```

```{r}
# ✅ Step 8: Compute Cohen’s h for Moved Out
df_lang_movedout <- df_lang_movedout %>%
  mutate(Total_Exits = Moved.Out + Not_Moved.Out)

total_exits_all <- sum(df_lang_movedout$Total_Exits)

compute_cohens_h <- function(p1, p2) {
  2 * abs(asin(sqrt(p1)) - asin(sqrt(p2)))
}

cohens_h_values <- numeric(nrow(df_lang_movedout))

for (i in seq_len(nrow(df_lang_movedout))) {
  p1 <- df_lang_movedout$Moved.Out[i] / df_lang_movedout$Total_Exits[i]
  other_movedout <- total_movedout_all - df_lang_movedout$Moved.Out[i]
  other_total <- total_exits_all - df_lang_movedout$Total_Exits[i]
  p2 <- other_movedout / other_total
  cohens_h_values[i] <- compute_cohens_h(p1, p2)
}

summary_df_odds_movedout_lang$Cohens_h <- round(cohens_h_values, 2)

```

```{r}
# ✅ Step 9: Write summary table to CSV
write.csv(
  summary_df_odds_movedout_lang,
  "/Users/hata/Desktop/EDLD652_Diss/Data/summary_movedout_by_language.csv",
  row.names = FALSE
)
```

```{r}
### 7/3 Redoing Table 34 YAY 

# Step 1: Load libraries
library(dplyr)
library(knitr)
library(kableExtra)

# Step 2: Define Cohen's h function
compute_cohens_h <- function(p1, p2) {
  2 * asin(sqrt(p1)) - 2 * asin(sqrt(p2))
}

# Step 3: Compute proportions and national average
df_lang_movedout <- df_lang_movedout %>%
  mutate(
    Moved_Out_N = as.numeric(Moved.Out),
    Total = as.numeric(Moved.Out + Not_Moved.Out),
    Proportion = Moved_Out_N / Total
  )

# Step 4: Compute national moved-out rate
national_moved_out <- sum(df_lang_movedout$Moved_Out_N, na.rm = TRUE)
national_total <- sum(df_lang_movedout$Total, na.rm = TRUE)
national_rate <- national_moved_out / national_total

# Step 5: Compute Cohen’s h
summary_df_h_movedout_lang <- df_lang_movedout %>%
  mutate(
    `National Avg` = national_rate,
    `Cohen's h` = round(compute_cohens_h(Proportion, national_rate), 3)
  ) %>%
  select(
    Primary.Language,
    `Moved Out N` = Moved_Out_N,
    `Total N` = Total,
    `Moved Out %` = Proportion,
    `National Avg %` = `National Avg`,
    `Cohen's h`
  ) %>%
  mutate(
    `Moved Out %` = sprintf("%.2f%%", 100 * `Moved Out %`),
    `National Avg %` = sprintf("%.2f%%", 100 * `National Avg %`)
  )

# Step 6: Display with kable
kable(summary_df_h_movedout_lang, caption = "Cohen's h for 'Moved Out' Exit Rates by Primary Language (Oregon)") %>%
  kable_styling(full_width = FALSE, position = "center") %>%
  kable_classic(full_width = FALSE, html_font = "Cambria")

```

```{r}
write.csv(
  summary_df_h_movedout_lang,
  file = "/Users/hata/Desktop/EDLD652_Diss/Data/cohens_h_movedout_by_3language_OR.csv",
  row.names = FALSE
)

```
